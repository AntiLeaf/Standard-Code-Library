\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{c+c1}{//Treap Minimum Heap Version 小根堆版本}
\PYG{c+c1}{//By ysf}
\PYG{c+c1}{//通过题目：普通平衡树}

\PYG{c+c1}{//注意：相同键值可以共存}

\PYG{k}{struct} \PYG{n+nc}{node}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//结点类定义}
	\PYG{k+kt}{int} \PYG{n}{key}\PYG{p}{,}\PYG{n}{size}\PYG{p}{,}\PYG{n}{p}\PYG{p}{;}\PYG{c+c1}{//分别为键值、子树大小、优先度}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{];}\PYG{c+c1}{//0表示左儿子，1表示右儿子}
	\PYG{n}{node}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{key}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{o}{:}\PYG{n}{key}\PYG{p}{(}\PYG{n}{key}\PYG{p}{),}\PYG{n}{size}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{),}\PYG{n}{p}\PYG{p}{(}\PYG{n}{rand}\PYG{p}{())\PYGZob{}\PYGZcb{}}
	\PYG{k+kt}{void} \PYG{n}{refresh}\PYG{p}{()\PYGZob{}}\PYG{n}{size}\PYG{o}{=}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{+}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{;\PYGZcb{}}\PYG{c+c1}{//更新子树大小（和附加信息）}
\PYG{p}{\PYGZcb{}}\PYG{n}{null}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{],}\PYG{o}{*}\PYG{n}{root}\PYG{o}{=}\PYG{n}{null}\PYG{p}{,}\PYG{o}{*}\PYG{n}{ptr}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}\PYG{c+c1}{//数组名叫做null是为了方便开哨兵节点}
\PYG{c+c1}{//如果需要删除而空间不能直接开下所有结点，则需要再写一个垃圾回收}
\PYG{c+c1}{//注意：数组里的元素一定不能delete，否则会导致RE}

\PYG{c+c1}{//重要！！！}
\PYG{c+c1}{//在主函数最开始一定要加上以下预处理：}
\PYG{n}{null}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{=}\PYG{n}{null}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}
\PYG{n}{null}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}

\PYG{c+c1}{//伪构造函数 O(1)}
\PYG{c+c1}{//为了方便，在结点类外面再定义一个伪构造函数}
\PYG{n}{node} \PYG{o}{*}\PYG{n+nf}{newnode}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//键值为x}
	\PYG{o}{*++}\PYG{n}{ptr}\PYG{o}{=}\PYG{n}{node}\PYG{p}{(}\PYG{n}{x}\PYG{p}{);}
	\PYG{n}{ptr}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{=}\PYG{n}{ptr}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}
	\PYG{k}{return} \PYG{n}{ptr}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//插入键值 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//需要调用旋转}
\PYG{k+kt}{void} \PYG{n+nf}{insert}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*\PYGZam{}}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//rt为当前结点，建议调用时传入root，下同}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{==}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
		\PYG{n}{rt}\PYG{o}{=}\PYG{n}{newnode}\PYG{p}{(}\PYG{n}{x}\PYG{p}{);}
		\PYG{k}{return}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
	\PYG{k+kt}{int} \PYG{n}{d}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZgt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{;}
	\PYG{n}{insert}\PYG{p}{(}\PYG{n}{x}\PYG{p}{,}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{]);}
	\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{refresh}\PYG{p}{();}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{p}\PYG{o}{\PYGZlt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{p}\PYG{p}{)}\PYG{n}{rot}\PYG{p}{(}\PYG{n}{rt}\PYG{p}{,}\PYG{n}{d}\PYG{o}{\PYGZca{}}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//删除一个键值 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//要求键值必须存在至少一个，否则会导致RE}
\PYG{c+c1}{//需要调用旋转}
\PYG{k+kt}{void} \PYG{n+nf}{erase}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*\PYGZam{}}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{x}\PYG{o}{==}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{!=}\PYG{n}{null}\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
			\PYG{k+kt}{int} \PYG{n}{d}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{p}\PYG{o}{\PYGZlt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{p}\PYG{p}{;}
			\PYG{n}{rot}\PYG{p}{(}\PYG{n}{rt}\PYG{p}{,}\PYG{n}{d}\PYG{p}{);}
			\PYG{n}{erase}\PYG{p}{(}\PYG{n}{x}\PYG{p}{,}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{]);}
		\PYG{p}{\PYGZcb{}}
		\PYG{k}{else} \PYG{n}{rt}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{==}\PYG{n}{null}\PYG{p}{];}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{else} \PYG{n}{erase}\PYG{p}{(}\PYG{n}{x}\PYG{p}{,}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{x}\PYG{o}{\PYGZgt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{]);}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{refresh}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//求元素的排名（严格小于键值的个数+1） 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//非递归}
\PYG{k+kt}{int} \PYG{n+nf}{rank}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}
	\PYG{k+kt}{int} \PYG{n}{ans}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{n}{d}\PYG{p}{;}
	\PYG{k}{while}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{((}\PYG{n}{d}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZgt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{))}\PYG{n}{ans}\PYG{o}{+=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{;}
		\PYG{n}{rt}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{];}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{n}{ans}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//返回排名第k（从1开始）的键值对应的指针 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//非递归}
\PYG{n}{node} \PYG{o}{*}\PYG{n+nf}{kth}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}
	\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{;}
	\PYG{k}{while}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{x}\PYG{o}{==}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{)}\PYG{k}{return} \PYG{n}{rt}\PYG{p}{;}
		\PYG{k}{if}\PYG{p}{((}\PYG{n}{d}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZgt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{p}{))}\PYG{n}{x}\PYG{o}{\PYGZhy{}=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{size}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{;}
		\PYG{n}{rt}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{];}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{n}{rt}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//返回前驱（最大的比给定键值小的键值）对应的指针 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//非递归}
\PYG{n}{node} \PYG{o}{*}\PYG{n+nf}{pred}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{y}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{;}
	\PYG{k}{while}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{((}\PYG{n}{d}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZgt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{))}\PYG{n}{y}\PYG{o}{=}\PYG{n}{rt}\PYG{p}{;}
		\PYG{n}{rt}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{];}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{n}{y}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//返回后继（最小的比给定键值大的键值）对应的指针 期望O(\PYGZbs{}log n)}
\PYG{c+c1}{//非递归}
\PYG{n}{node} \PYG{o}{*}\PYG{n+nf}{succ}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{)\PYGZob{}}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{y}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}
	\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{;}
	\PYG{k}{while}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)\PYGZob{}}
		\PYG{k}{if}\PYG{p}{((}\PYG{n}{d}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZlt{}}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{key}\PYG{p}{))}\PYG{n}{y}\PYG{o}{=}\PYG{n}{rt}\PYG{p}{;}
		\PYG{n}{rt}\PYG{o}{=}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{o}{\PYGZca{}}\PYG{l+m+mi}{1}\PYG{p}{];}
	\PYG{p}{\PYGZcb{}}
	\PYG{k}{return} \PYG{n}{y}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//旋转（Treap版本） O(1)}
\PYG{c+c1}{//平衡树基础操作}
\PYG{c+c1}{//要求对应儿子必须存在，否则会导致后续各种莫名其妙的问题}
\PYG{k+kt}{void} \PYG{n+nf}{rot}\PYG{p}{(}\PYG{n}{node} \PYG{o}{*\PYGZam{}}\PYG{n}{x}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//x为被转下去的结点，会被修改以维护树结构}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{y}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{o}{\PYGZca{}}\PYG{l+m+mi}{1}\PYG{p}{];}
	\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{o}{\PYGZca{}}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{=}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{];}
	\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{ch}\PYG{p}{[}\PYG{n}{d}\PYG{p}{]}\PYG{o}{=}\PYG{n}{x}\PYG{p}{;}
	\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{refresh}\PYG{p}{();}
	\PYG{p}{(}\PYG{n}{x}\PYG{o}{=}\PYG{n}{y}\PYG{p}{)}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{refresh}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
