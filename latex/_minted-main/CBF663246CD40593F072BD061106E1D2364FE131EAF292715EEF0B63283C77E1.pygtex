\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{c+c1}{//注意这是个多项式算法，在k比较大时很有优势，但k比较小时最好还是用A*}
\PYG{c+c1}{//DAG和有环的情况都可以，有重边或自环也无所谓，但不能有零环}
\PYG{c+c1}{//以下代码以Dijkstra+可持久化左偏树为例}

\PYG{k}{const} \PYG{k+kt}{int} \PYG{n}{maxn}\PYG{o}{=}\PYG{l+m+mi}{1005}\PYG{p}{,}\PYG{n}{maxe}\PYG{o}{=}\PYG{l+m+mi}{10005}\PYG{p}{,}\PYG{n}{maxm}\PYG{o}{=}\PYG{n}{maxe}\PYG{o}{*}\PYG{l+m+mi}{30}\PYG{p}{;}\PYG{c+c1}{//点数，边数，左偏树结点数}

\PYG{c+c1}{//需要用到的结构体定义}
\PYG{k}{struct} \PYG{n+nc}{A}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//用来求最短路}
	\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{d}\PYG{p}{;}
	\PYG{n}{A}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{)}\PYG{o}{:}\PYG{n}{x}\PYG{p}{(}\PYG{n}{x}\PYG{p}{),}\PYG{n}{d}\PYG{p}{(}\PYG{n}{d}\PYG{p}{)\PYGZob{}\PYGZcb{}}
	\PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{\PYGZlt{}}\PYG{p}{(}\PYG{k}{const} \PYG{n}{A} \PYG{o}{\PYGZam{}}\PYG{n}{a}\PYG{p}{)}\PYG{k}{const}\PYG{p}{\PYGZob{}}\PYG{k}{return} \PYG{n}{d}\PYG{o}{\PYGZgt{}}\PYG{n}{a}\PYG{p}{.}\PYG{n}{d}\PYG{p}{;\PYGZcb{}}
\PYG{p}{\PYGZcb{};}

\PYG{k}{struct} \PYG{n+nc}{node}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//左偏树结点}
	\PYG{k+kt}{int} \PYG{n}{w}\PYG{p}{,}\PYG{n}{i}\PYG{p}{,}\PYG{n}{d}\PYG{p}{;}\PYG{c+c1}{//i：最后一条边的编号 d：左偏树附加信息}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{lc}\PYG{p}{,}\PYG{o}{*}\PYG{n}{rc}\PYG{p}{;}
	\PYG{n}{node}\PYG{p}{()\PYGZob{}\PYGZcb{}}
	\PYG{n}{node}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{w}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{i}\PYG{p}{)}\PYG{o}{:}\PYG{n}{w}\PYG{p}{(}\PYG{n}{w}\PYG{p}{),}\PYG{n}{i}\PYG{p}{(}\PYG{n}{i}\PYG{p}{),}\PYG{n}{d}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}\PYGZcb{}}
	\PYG{k+kt}{void} \PYG{n}{refresh}\PYG{p}{()\PYGZob{}}\PYG{n}{d}\PYG{o}{=}\PYG{n}{rc}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{d}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{;\PYGZcb{}}
\PYG{p}{\PYGZcb{}}\PYG{n}{null}\PYG{p}{[}\PYG{n}{maxm}\PYG{p}{],}\PYG{o}{*}\PYG{n}{ptr}\PYG{o}{=}\PYG{n}{null}\PYG{p}{,}\PYG{o}{*}\PYG{n}{root}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{];}

\PYG{k}{struct} \PYG{n+nc}{B}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//维护答案用}
	\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{w}\PYG{p}{;}\PYG{c+c1}{//x是结点编号，w表示之前已经产生的权值}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{;}\PYG{c+c1}{//这个答案对应的堆顶，注意可能不等于任何一个结点的堆}
	\PYG{n}{B}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{w}\PYG{p}{)}\PYG{o}{:}\PYG{n}{x}\PYG{p}{(}\PYG{n}{x}\PYG{p}{),}\PYG{n}{w}\PYG{p}{(}\PYG{n}{w}\PYG{p}{),}\PYG{n}{rt}\PYG{p}{(}\PYG{n}{rt}\PYG{p}{)\PYGZob{}\PYGZcb{}}
	\PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{\PYGZlt{}}\PYG{p}{(}\PYG{k}{const} \PYG{n}{B} \PYG{o}{\PYGZam{}}\PYG{n}{a}\PYG{p}{)}\PYG{k}{const}\PYG{p}{\PYGZob{}}\PYG{k}{return} \PYG{n}{w}\PYG{o}{+}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{o}{\PYGZgt{}}\PYG{n}{a}\PYG{p}{.}\PYG{n}{w}\PYG{o}{+}\PYG{n}{a}\PYG{p}{.}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{p}{;\PYGZcb{}}
\PYG{p}{\PYGZcb{};}

\PYG{c+c1}{//全局变量和数组定义}
\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{n}{G}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{],}\PYG{n}{W}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{],}\PYG{n}{id}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{];}\PYG{c+c1}{//最开始要存反向图，然后把G清空作为儿子列表}
\PYG{k+kt}{bool} \PYG{n}{vis}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{],}\PYG{n}{used}\PYG{p}{[}\PYG{n}{maxe}\PYG{p}{];}\PYG{c+c1}{//used表示边是否在最短路树上}
\PYG{k+kt}{int} \PYG{n}{u}\PYG{p}{[}\PYG{n}{maxe}\PYG{p}{],}\PYG{n}{v}\PYG{p}{[}\PYG{n}{maxe}\PYG{p}{],}\PYG{n}{w}\PYG{p}{[}\PYG{n}{maxe}\PYG{p}{];}\PYG{c+c1}{//存下每条边，注意是有向边}
\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{],}\PYG{n}{p}\PYG{p}{[}\PYG{n}{maxn}\PYG{p}{];}\PYG{c+c1}{//p表示最短路树上每个点的父边}
\PYG{k+kt}{int} \PYG{n}{n}\PYG{p}{,}\PYG{n}{m}\PYG{p}{,}\PYG{n}{k}\PYG{p}{,}\PYG{n}{s}\PYG{p}{,}\PYG{n}{t}\PYG{p}{;}\PYG{c+c1}{//s,t分别表示起点和终点}

\PYG{c+c1}{//以下是主函数中较关键的部分}
\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}=}\PYG{n}{n}\PYG{p}{;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{n}{root}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}\PYG{c+c1}{//一定要加上！！！}
\PYG{c+c1}{//(读入\PYGZam{}建反向图)}
\PYG{n}{Dijkstra}\PYG{p}{();}
\PYG{c+c1}{//(清空G,W,id)}
\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}=}\PYG{n}{n}\PYG{p}{;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{p}\PYG{p}{[}\PYG{n}{i}\PYG{p}{])\PYGZob{}}
		\PYG{n}{used}\PYG{p}{[}\PYG{n}{p}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{=}\PYG{n+nb}{true}\PYG{p}{;}\PYG{c+c1}{//在最短路树上}
		\PYG{n}{G}\PYG{p}{[}\PYG{n}{v}\PYG{p}{[}\PYG{n}{p}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]]].}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{i}\PYG{p}{);}
	\PYG{p}{\PYGZcb{}}
\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{1}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}=}\PYG{n}{m}\PYG{p}{;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
	\PYG{n}{w}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{o}{\PYGZhy{}=}\PYG{n}{d}\PYG{p}{[}\PYG{n}{u}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{\PYGZhy{}}\PYG{n}{d}\PYG{p}{[}\PYG{n}{v}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]];}\PYG{c+c1}{//现在的w[i]表示这条边能使路径长度增加多少}
	\PYG{k}{if}\PYG{p}{(}\PYG{o}{!}\PYG{n}{used}\PYG{p}{[}\PYG{n}{i}\PYG{p}{])}
		\PYG{n}{root}\PYG{p}{[}\PYG{n}{u}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{=}\PYG{n}{merge}\PYG{p}{(}\PYG{n}{root}\PYG{p}{[}\PYG{n}{u}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]],}\PYG{n}{newnode}\PYG{p}{(}\PYG{n}{w}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],}\PYG{n}{i}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}
\PYG{n}{dfs}\PYG{p}{(}\PYG{n}{t}\PYG{p}{);}
\PYG{n}{priority\PYGZus{}queue}\PYG{o}{\PYGZlt{}}\PYG{n}{B}\PYG{o}{\PYGZgt{}}\PYG{n}{heap}\PYG{p}{;}
\PYG{n}{heap}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{B}\PYG{p}{(}\PYG{n}{s}\PYG{p}{,}\PYG{n}{root}\PYG{p}{[}\PYG{n}{s}\PYG{p}{],}\PYG{l+m+mi}{0}\PYG{p}{));}\PYG{c+c1}{//初始状态是找贡献最小的边加进去}
\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{n}{d}\PYG{p}{[}\PYG{n}{s}\PYG{p}{]);}\PYG{c+c1}{//第1短路需要特判}
\PYG{k}{while}\PYG{p}{(}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{n}{k}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//其余k\PYGZhy{}1短路径用二叉堆维护}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZhy{}1}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
	\PYG{k}{else}\PYG{p}{\PYGZob{}}
		\PYG{k+kt}{int} \PYG{n}{x}\PYG{o}{=}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{top}\PYG{p}{().}\PYG{n}{x}\PYG{p}{,}\PYG{n}{w}\PYG{o}{=}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{top}\PYG{p}{().}\PYG{n}{w}\PYG{p}{;}
		\PYG{n}{node} \PYG{o}{*}\PYG{n}{rt}\PYG{o}{=}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{top}\PYG{p}{().}\PYG{n}{rt}\PYG{p}{;}
		\PYG{n}{heap}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{();}
		\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{n}{d}\PYG{p}{[}\PYG{n}{s}\PYG{p}{]}\PYG{o}{+}\PYG{n}{w}\PYG{o}{+}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{p}{);}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{o}{!=}\PYG{n}{null}\PYG{o}{||}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)}
			\PYG{n}{heap}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{B}\PYG{p}{(}\PYG{n}{x}\PYG{p}{,}\PYG{n}{merge}\PYG{p}{(}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{p}{,}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{p}{),}\PYG{n}{w}\PYG{p}{));}\PYG{c+c1}{//pop掉当前边，换成另一条贡献大一点的边}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{root}\PYG{p}{[}\PYG{n}{v}\PYG{p}{[}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{!=}\PYG{n}{null}\PYG{p}{)}
			\PYG{n}{heap}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{B}\PYG{p}{(}\PYG{n}{v}\PYG{p}{[}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{i}\PYG{p}{],}\PYG{n}{root}\PYG{p}{[}\PYG{n}{v}\PYG{p}{[}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{i}\PYG{p}{]],}\PYG{n}{w}\PYG{o}{+}\PYG{n}{rt}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{p}{));}\PYG{c+c1}{//保留当前边，往后面再接上另一条边}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//主函数到此结束}

\PYG{c+c1}{//Dijkstra预处理最短路 O(m\PYGZbs{}log n)}
\PYG{k+kt}{void} \PYG{n}{Dijkstra}\PYG{p}{()\PYGZob{}}
	\PYG{n}{memset}\PYG{p}{(}\PYG{n}{d}\PYG{p}{,}\PYG{l+m+mi}{63}\PYG{p}{,}\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{d}\PYG{p}{));}
	\PYG{n}{d}\PYG{p}{[}\PYG{n}{t}\PYG{p}{]}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
	\PYG{n}{priority\PYGZus{}queue}\PYG{o}{\PYGZlt{}}\PYG{n}{A}\PYG{o}{\PYGZgt{}}\PYG{n}{heap}\PYG{p}{;}
	\PYG{n}{heap}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{A}\PYG{p}{(}\PYG{n}{t}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{));}
	\PYG{k}{while}\PYG{p}{(}\PYG{o}{!}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())\PYGZob{}}
		\PYG{k+kt}{int} \PYG{n}{x}\PYG{o}{=}\PYG{n}{heap}\PYG{p}{.}\PYG{n}{top}\PYG{p}{().}\PYG{n}{x}\PYG{p}{;}
		\PYG{n}{heap}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{();}
		\PYG{k}{if}\PYG{p}{(}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{x}\PYG{p}{])}\PYG{k}{continue}\PYG{p}{;}
		\PYG{n}{vis}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]}\PYG{o}{=}\PYG{n+nb}{true}\PYG{p}{;}
		\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{].}\PYG{n}{size}\PYG{p}{();}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
			\PYG{k}{if}\PYG{p}{(}\PYG{o}{!}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{n}{d}\PYG{p}{[}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{\PYGZgt{}}\PYG{n}{d}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]}\PYG{o}{+}\PYG{n}{W}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{])\PYGZob{}}
				\PYG{n}{d}\PYG{p}{[}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{=}\PYG{n}{d}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]}\PYG{o}{+}\PYG{n}{W}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{];}
				\PYG{n}{p}\PYG{p}{[}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]]}\PYG{o}{=}\PYG{n}{id}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{];}
				\PYG{n}{heap}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{A}\PYG{p}{(}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{],}\PYG{n}{d}\PYG{p}{[}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]]));}
			\PYG{p}{\PYGZcb{}}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//dfs求出每个点的堆 总计O(m\PYGZbs{}log n)}
\PYG{c+c1}{//需要调用merge，同时递归调用自身}
\PYG{k+kt}{void} \PYG{n}{dfs}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{x}\PYG{p}{)\PYGZob{}}
	\PYG{n}{root}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]}\PYG{o}{=}\PYG{n}{merge}\PYG{p}{(}\PYG{n}{root}\PYG{p}{[}\PYG{n}{x}\PYG{p}{],}\PYG{n}{root}\PYG{p}{[}\PYG{n}{v}\PYG{p}{[}\PYG{n}{p}\PYG{p}{[}\PYG{n}{x}\PYG{p}{]]]);}
	\PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{].}\PYG{n}{size}\PYG{p}{();}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
		\PYG{n}{dfs}\PYG{p}{(}\PYG{n}{G}\PYG{p}{[}\PYG{n}{x}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]);}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//包装过的new node() O(1)}
\PYG{n}{node} \PYG{o}{*}\PYG{n}{newnode}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{w}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{i}\PYG{p}{)\PYGZob{}}
	\PYG{o}{*++}\PYG{n}{ptr}\PYG{o}{=}\PYG{n}{node}\PYG{p}{(}\PYG{n}{w}\PYG{p}{,}\PYG{n}{i}\PYG{p}{);}
	\PYG{n}{ptr}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{o}{=}\PYG{n}{ptr}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{o}{=}\PYG{n}{null}\PYG{p}{;}
	\PYG{k}{return} \PYG{n}{ptr}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{//带可持久化的左偏树合并 总计O(\PYGZbs{}log n)}
\PYG{c+c1}{//递归调用自身}
\PYG{n}{node} \PYG{o}{*}\PYG{n}{merge}\PYG{p}{(}\PYG{n}{node} \PYG{o}{*}\PYG{n}{x}\PYG{p}{,}\PYG{n}{node} \PYG{o}{*}\PYG{n}{y}\PYG{p}{)\PYGZob{}}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{x}\PYG{o}{==}\PYG{n}{null}\PYG{p}{)}\PYG{k}{return} \PYG{n}{y}\PYG{p}{;}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{y}\PYG{o}{==}\PYG{n}{null}\PYG{p}{)}\PYG{k}{return} \PYG{n}{x}\PYG{p}{;}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{o}{\PYGZgt{}}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{p}{)}\PYG{n}{swap}\PYG{p}{(}\PYG{n}{x}\PYG{p}{,}\PYG{n}{y}\PYG{p}{);}
	\PYG{n}{node} \PYG{o}{*}\PYG{n}{z}\PYG{o}{=}\PYG{n}{newnode}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{w}\PYG{p}{,}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{i}\PYG{p}{);}
	\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{o}{=}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{p}{;}
	\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{o}{=}\PYG{n}{merge}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{p}{,}\PYG{n}{y}\PYG{p}{);}
	\PYG{k}{if}\PYG{p}{(}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{d}\PYG{o}{\PYGZgt{}}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{d}\PYG{p}{)}\PYG{n}{swap}\PYG{p}{(}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{lc}\PYG{p}{,}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rc}\PYG{p}{);}
	\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{refresh}\PYG{p}{();}
	\PYG{k}{return} \PYG{n}{z}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
